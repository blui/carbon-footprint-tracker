{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\components\\\\SystemData.tsx\",\n  _s = $RefreshSig$();\n// client/src/components/SystemData.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport API_BASE_URL from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemData = ({\n  systemId\n}) => {\n  _s();\n  const [data, setData] = useState(null); // Store the fetched data\n  const [error, setError] = useState(null); // Store any error messages\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Send a GET request to fetch emissions and recommendations for the system\n        const response = await fetch(`${API_BASE_URL}/api/systems/${systemId}/data`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch system data\");\n        }\n        const result = await response.json();\n        setData(result); // Store the fetched data\n      } catch (err) {\n        setError(`Error fetching data: ${err.message}`);\n      }\n    };\n    fetchData(); // Fetch data when the component is mounted\n  }, [systemId]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Emissions and Recommendations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Emissions: \", data.emissions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Efficiency: \", data.efficiency]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Recommendations: \", data.recommendations]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemData, \"XDVXnHzsKW9JpOo48THjIq2+NOI=\");\n_c = SystemData;\nexport default SystemData;\nvar _c;\n$RefreshReg$(_c, \"SystemData\");","map":{"version":3,"names":["React","useEffect","useState","API_BASE_URL","jsxDEV","_jsxDEV","SystemData","systemId","_s","data","setData","error","setError","fetchData","response","fetch","ok","Error","result","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","emissions","efficiency","recommendations","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/components/SystemData.tsx"],"sourcesContent":["// client/src/components/SystemData.tsx\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport API_BASE_URL from \"../config\";\r\n\r\nconst SystemData = ({ systemId }: { systemId: string }) => {\r\n  const [data, setData] = useState<any>(null); // Store the fetched data\r\n  const [error, setError] = useState<string | null>(null); // Store any error messages\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Send a GET request to fetch emissions and recommendations for the system\r\n        const response = await fetch(\r\n          `${API_BASE_URL}/api/systems/${systemId}/data`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch system data\");\r\n        }\r\n\r\n        const result = await response.json();\r\n        setData(result); // Store the fetched data\r\n      } catch (err: unknown) {\r\n        setError(`Error fetching data: ${(err as Error).message}`);\r\n      }\r\n    };\r\n\r\n    fetchData(); // Fetch data when the component is mounted\r\n  }, [systemId]);\r\n\r\n  if (error) return <p>{error}</p>;\r\n  if (!data) return <p>Loading data...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Emissions and Recommendations</h2>\r\n      <p>Emissions: {data.emissions}</p>\r\n      <p>Efficiency: {data.efficiency}</p>\r\n      <p>Recommendations: {data.recommendations}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemData;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAA+B,CAAC,KAAK;EAAAC,EAAA;EACzD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAM,IAAI,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAEzDD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGZ,YAAY,gBAAgBI,QAAQ,OACzC,CAAC;QAED,IAAI,CAACO,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QAEA,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACpCT,OAAO,CAACQ,MAAM,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,OAAOE,GAAY,EAAE;QACrBR,QAAQ,CAAC,wBAAyBQ,GAAG,CAAWC,OAAO,EAAE,CAAC;MAC5D;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,IAAII,KAAK,EAAE,oBAAON,OAAA;IAAAiB,QAAA,EAAIX;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChC,IAAI,CAACjB,IAAI,EAAE,oBAAOJ,OAAA;IAAAiB,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAExC,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCrB,OAAA;MAAAiB,QAAA,GAAG,aAAW,EAACb,IAAI,CAACkB,SAAS;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCrB,OAAA;MAAAiB,QAAA,GAAG,cAAY,EAACb,IAAI,CAACmB,UAAU;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpCrB,OAAA;MAAAiB,QAAA,GAAG,mBAAiB,EAACb,IAAI,CAACoB,eAAe;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAClB,EAAA,CArCIF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}