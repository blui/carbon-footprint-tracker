{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\components\\\\SystemForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport API_BASE_URL from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemForm = ({\n  orgId,\n  onSystemAdded\n}) => {\n  _s();\n  const [type, setType] = useState(\"\"); // System type state\n  const [details, setDetails] = useState(\"\"); // System details state\n  const [error, setError] = useState(null); // Error state\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null); // Clear any previous errors\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type,\n          details\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add system\");\n      }\n      onSystemAdded(); // Notify parent component (App.tsx) to refresh systems list\n    } catch (err) {\n      setError(`Error adding system: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: type,\n      onChange: e => setType(e.target.value),\n      placeholder: \"System Type\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: details,\n      onChange: e => setDetails(e.target.value),\n      placeholder: \"System Details\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemForm, \"uu7U8yV1wJP72Qz4dGVF3DW2klc=\");\n_c = SystemForm;\nexport default SystemForm;\nvar _c;\n$RefreshReg$(_c, \"SystemForm\");","map":{"version":3,"names":["React","useState","API_BASE_URL","jsxDEV","_jsxDEV","SystemForm","orgId","onSystemAdded","_s","type","setType","details","setDetails","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","err","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/components/SystemForm.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport API_BASE_URL from \"../config\";\r\n\r\ninterface SystemFormProps {\r\n  orgId: string; // Organization ID to associate the system with\r\n  onSystemAdded: () => void; // Callback to notify when a system is added\r\n}\r\n\r\nconst SystemForm: React.FC<SystemFormProps> = ({ orgId, onSystemAdded }) => {\r\n  const [type, setType] = useState(\"\"); // System type state\r\n  const [details, setDetails] = useState(\"\"); // System details state\r\n  const [error, setError] = useState<string | null>(null); // Error state\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null); // Clear any previous errors\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/organizations/${orgId}/systems`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ type, details }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to add system\");\r\n      }\r\n\r\n      onSystemAdded(); // Notify parent component (App.tsx) to refresh systems list\r\n    } catch (err: unknown) {\r\n      setError(`Error adding system: ${(err as Error).message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add System</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={type}\r\n        onChange={(e) => setType(e.target.value)}\r\n        placeholder=\"System Type\"\r\n        required\r\n      />\r\n      <textarea\r\n        value={details}\r\n        onChange={(e) => setDetails(e.target.value)}\r\n        placeholder=\"System Details\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Add System</button>\r\n      {error && <p>{error}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SystemForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOrC,MAAMC,UAAqC,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAEzD,MAAMc,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhB,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGjB,YAAY,sBAAsBI,KAAK,UAAU,EACpD;QACEc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,IAAI;UAAEE;QAAQ,CAAC;MACxC,CACF,CAAC;MAED,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEAnB,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC,OAAOoB,GAAY,EAAE;MACrBb,QAAQ,CAAC,wBAAyBa,GAAG,CAAWC,OAAO,EAAE,CAAC;IAC5D;EACF,CAAC;EAED,oBACExB,OAAA;IAAMyB,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3B1B,OAAA;MAAA0B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB9B,OAAA;MACEK,IAAI,EAAC,MAAM;MACX0B,KAAK,EAAE1B,IAAK;MACZ2B,QAAQ,EAAGpB,CAAC,IAAKN,OAAO,CAACM,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC,aAAa;MACzBC,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF9B,OAAA;MACE+B,KAAK,EAAExB,OAAQ;MACfyB,QAAQ,EAAGpB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC,gBAAgB;MAC5BC,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF9B,OAAA;MAAQK,IAAI,EAAC,QAAQ;MAAAqB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxCrB,KAAK,iBAAIT,OAAA;MAAA0B,QAAA,EAAIjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEX,CAAC;AAAC1B,EAAA,CAjDIH,UAAqC;AAAAmC,EAAA,GAArCnC,UAAqC;AAmD3C,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}