{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\components\\\\SystemForm.tsx\",\n  _s = $RefreshSig$();\n// client/src/components/SystemForm.tsx\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemForm = ({\n  orgId\n}) => {\n  _s();\n  const [type, setType] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(`/api/organizations/${orgId}/systems`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        type,\n        details\n      })\n    });\n    const data = await response.json();\n    console.log(data); // Display the created system\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: type,\n      onChange: e => setType(e.target.value),\n      placeholder: \"System Type (e.g., Supply Chain, Vehicles)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: details,\n      onChange: e => setDetails(e.target.value),\n      placeholder: \"System Details\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemForm, \"OhPBdFH1Cslhf00Xp93+bI1ePg4=\");\n_c = SystemForm;\nexport default SystemForm;\nvar _c;\n$RefreshReg$(_c, \"SystemForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SystemForm","orgId","_s","type","setType","details","setDetails","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/components/SystemForm.tsx"],"sourcesContent":["// client/src/components/SystemForm.tsx\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst SystemForm = ({ orgId }: { orgId: string }) => {\r\n  const [type, setType] = useState(\"\");\r\n  const [details, setDetails] = useState(\"\");\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const response = await fetch(`/api/organizations/${orgId}/systems`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ type, details }),\r\n    });\r\n    const data = await response.json();\r\n    console.log(data); // Display the created system\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add System</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={type}\r\n        onChange={(e) => setType(e.target.value)}\r\n        placeholder=\"System Type (e.g., Supply Chain, Vehicles)\"\r\n        required\r\n      />\r\n      <textarea\r\n        value={details}\r\n        onChange={(e) => setDetails(e.target.value)}\r\n        placeholder=\"System Details\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Add System</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SystemForm;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAyB,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsBV,KAAK,UAAU,EAAE;MAClEW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,IAAI;QAAEE;MAAQ,CAAC;IACxC,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;EACrB,CAAC;EAED,oBACElB,OAAA;IAAMsB,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3BvB,OAAA;MAAAuB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB3B,OAAA;MACEI,IAAI,EAAC,MAAM;MACXwB,KAAK,EAAExB,IAAK;MACZyB,QAAQ,EAAGpB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MACzCG,WAAW,EAAC,4CAA4C;MACxDC,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MACE4B,KAAK,EAAEtB,OAAQ;MACfuB,QAAQ,EAAGpB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC,gBAAgB;MAC5BC,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF3B,OAAA;MAAQI,IAAI,EAAC,QAAQ;MAAAmB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEX,CAAC;AAACxB,EAAA,CAlCIF,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}