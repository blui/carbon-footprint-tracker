{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// client/src/App.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport OrganizationForm from \"./components/OrganizationForm\";\nimport SystemForm from \"./components/SystemForm\";\nimport SystemData from \"./components/SystemData\";\nimport API_BASE_URL from \"./config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [orgId, setOrgId] = useState(null); // Store the selected organization ID\n  const [systemId, setSystemId] = useState(null); // Store the selected system ID\n  const [systems, setSystems] = useState([]); // Store the list of systems for an organization\n\n  // Fetch the systems for a specific organization (after one is created)\n  useEffect(() => {\n    if (orgId) {\n      fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`).then(res => res.json()).then(data => {\n        setSystems(data); // Set the systems retrieved from the backend\n      }).catch(err => console.error(\"Error fetching systems:\", err));\n    }\n  }, [orgId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Carbon Footprint Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrganizationForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), orgId && /*#__PURE__*/_jsxDEV(SystemForm, {\n      orgId: orgId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), systems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select a System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setSystemId(e.target.value),\n        defaultValue: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select a system\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), systems.map(system => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: system._id,\n          children: [system.type, \" - \", system.details]\n        }, system._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), systemId && /*#__PURE__*/_jsxDEV(SystemData, {\n      systemId: systemId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dl110My+cO8UAIbmnQ97LICHVXg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","OrganizationForm","SystemForm","SystemData","API_BASE_URL","jsxDEV","_jsxDEV","App","_s","orgId","setOrgId","systemId","setSystemId","systems","setSystems","fetch","then","res","json","data","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onChange","e","target","value","defaultValue","disabled","map","system","_id","type","details","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/App.tsx"],"sourcesContent":["// client/src/App.tsx\n\nimport React, { useEffect, useState } from \"react\";\nimport OrganizationForm from \"./components/OrganizationForm\";\nimport SystemForm from \"./components/SystemForm\";\nimport SystemData from \"./components/SystemData\";\nimport API_BASE_URL from \"./config\";\n\nconst App = () => {\n  const [orgId, setOrgId] = useState<string | null>(null); // Store the selected organization ID\n  const [systemId, setSystemId] = useState<string | null>(null); // Store the selected system ID\n  const [systems, setSystems] = useState<any[]>([]); // Store the list of systems for an organization\n\n  // Fetch the systems for a specific organization (after one is created)\n  useEffect(() => {\n    if (orgId) {\n      fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`)\n        .then((res) => res.json())\n        .then((data) => {\n          setSystems(data); // Set the systems retrieved from the backend\n        })\n        .catch((err) => console.error(\"Error fetching systems:\", err));\n    }\n  }, [orgId]);\n\n  return (\n    <div>\n      <h1>Carbon Footprint Tracker</h1>\n\n      {/* Form to create an organization */}\n      <OrganizationForm />\n\n      {/* Form to add a system to the organization (pass orgId to SystemForm) */}\n      {orgId && <SystemForm orgId={orgId} />}\n\n      {/* Dropdown to select system and show data */}\n      {systems.length > 0 && (\n        <div>\n          <h2>Select a System</h2>\n          <select onChange={(e) => setSystemId(e.target.value)} defaultValue=\"\">\n            <option value=\"\" disabled>\n              Select a system\n            </option>\n            {systems.map((system) => (\n              <option key={system._id} value={system._id}>\n                {system.type} - {system.details}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      {/* Show the system data once a system is selected */}\n      {systemId && <SystemData systemId={systemId} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}