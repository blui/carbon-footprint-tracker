{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\components\\\\SystemForm.tsx\",\n  _s = $RefreshSig$();\n// client/src/components/SystemForm.tsx\n\nimport React, { useState } from \"react\";\nimport API_BASE_URL from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemForm = ({\n  orgId\n}) => {\n  _s();\n  const [type, setType] = useState(\"\"); // Store the system type\n  const [details, setDetails] = useState(\"\"); // Store the system details\n  const [error, setError] = useState(null); // Store any error messages\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n    try {\n      // Send a POST request to add the system to the organization\n      const response = await fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type,\n          details\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add system\");\n      }\n      const data = await response.json();\n      console.log(\"System added:\", data);\n    } catch (err) {\n      setError(`Error adding system: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: type,\n      onChange: e => setType(e.target.value),\n      placeholder: \"System Type (e.g., Supply Chain, Vehicles)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: details,\n      onChange: e => setDetails(e.target.value),\n      placeholder: \"System Details\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemForm, \"uu7U8yV1wJP72Qz4dGVF3DW2klc=\");\n_c = SystemForm;\nexport default SystemForm;\nvar _c;\n$RefreshReg$(_c, \"SystemForm\");","map":{"version":3,"names":["React","useState","API_BASE_URL","jsxDEV","_jsxDEV","SystemForm","orgId","_s","type","setType","details","setDetails","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","err","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/components/SystemForm.tsx"],"sourcesContent":["// client/src/components/SystemForm.tsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport API_BASE_URL from \"../config\";\r\n\r\nconst SystemForm = ({ orgId }: { orgId: string }) => {\r\n  const [type, setType] = useState(\"\"); // Store the system type\r\n  const [details, setDetails] = useState(\"\"); // Store the system details\r\n  const [error, setError] = useState<string | null>(null); // Store any error messages\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    try {\r\n      // Send a POST request to add the system to the organization\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/organizations/${orgId}/systems`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ type, details }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to add system\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"System added:\", data);\r\n    } catch (err: unknown) {\r\n      setError(`Error adding system: ${(err as Error).message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add System</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={type}\r\n        onChange={(e) => setType(e.target.value)}\r\n        placeholder=\"System Type (e.g., Supply Chain, Vehicles)\"\r\n        required\r\n      />\r\n      <textarea\r\n        value={details}\r\n        onChange={(e) => setDetails(e.target.value)}\r\n        placeholder=\"System Details\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Add System</button>\r\n      {error && <p>{error}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SystemForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}