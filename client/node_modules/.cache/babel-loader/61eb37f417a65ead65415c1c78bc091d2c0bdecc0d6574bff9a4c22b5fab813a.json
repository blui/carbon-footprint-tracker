{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport OrganizationForm from \"./components/OrganizationForm\";\nimport SystemForm from \"./components/SystemForm\";\nimport SystemTable from \"./components/SystemTable\"; // Import SystemTable component\n\n// Import OrganizationList component\nimport API_BASE_URL from \"./config\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [orgId, setOrgId] = useState(null); // Track selected organization ID\n  const [systems, setSystems] = useState([]); // List of systems for the selected organization\n  const [organizations, setOrganizations] = useState([]); // List of organizations\n  const [selectedOrgName, setSelectedOrgName] = useState(null); // Track the selected organization name\n\n  // Function to fetch organizations from the backend\n  const fetchOrganizations = () => {\n    fetch(`${API_BASE_URL}/api/organizations`).then(res => res.json()).then(data => setOrganizations(data)).catch(err => console.error(\"Error fetching organizations:\", err));\n  };\n\n  // Fetch systems for a selected organization\n  const fetchSystems = orgId => {\n    fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`).then(res => res.json()).then(data => setSystems(data)).catch(err => console.error(\"Error fetching systems:\", err));\n  };\n\n  // Fetch organizations on initial render\n  useEffect(() => {\n    fetchOrganizations();\n  }, []);\n\n  // Handle selecting an organization\n  const handleSelectOrganization = (selectedOrgId, selectedOrgName) => {\n    setOrgId(selectedOrgId);\n    setSelectedOrgName(selectedOrgName); // Set the selected organization's name\n    fetchSystems(selectedOrgId); // Fetch systems for the selected organization\n  };\n\n  // Handle updating an organization\n  const handleUpdateOrganization = async orgId => {\n    const updatedName = prompt(\"Enter new organization name:\");\n    if (updatedName) {\n      await fetch(`${API_BASE_URL}/api/organizations/${orgId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: updatedName\n        })\n      });\n      fetchOrganizations(); // Refresh the organization list after update\n    }\n  };\n\n  // Handle deleting an organization\n  const handleDeleteOrganization = async orgId => {\n    if (window.confirm(\"Are you sure you want to delete this organization? This will delete all associated systems as well.\")) {\n      await fetch(`${API_BASE_URL}/api/organizations/${orgId}`, {\n        method: \"DELETE\"\n      });\n      fetchOrganizations(); // Refresh the organization list after deletion\n      setOrgId(null); // Clear selected organization after deletion\n      setSelectedOrgName(null); // Clear selected organization name after deletion\n      setSystems([]); // Clear systems list after organization is deleted\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-600 text-white text-center py-6 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"Carbon Footprint Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-72 bg-gray-800 text-white p-6 h-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-6\",\n          children: \"Your Organizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: organizations.map(org => /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => handleSelectOrganization(org._id, org.name),\n            className: `cursor-pointer py-2 px-4 bg-gray-700 rounded-lg mb-2 ${org._id === orgId ? \"bg-blue-500 text-white\" : \"bg-gray-700 text-gray-300\"}` // Highlight the selected organization\n            ,\n            children: org.name\n          }, org._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: /*#__PURE__*/_jsxDEV(OrganizationForm, {\n            onOrganizationCreated: fetchOrganizations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow p-10 bg-white shadow-lg\",\n        children: selectedOrgName ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold text-gray-700 mb-4\",\n            children: [\"Systems for \", selectedOrgName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SystemForm, {\n            orgId: orgId,\n            onSystemAdded: () => fetchSystems(orgId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), systems.length > 0 ? /*#__PURE__*/_jsxDEV(SystemTable, {\n            systems: systems,\n            onSystemUpdated: () => fetchSystems(orgId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 mt-4\",\n            children: \"No systems available for this organization.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Please select an organization to view its systems.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"x3cCvcN0HGl0Bc5iSO6EvAarL4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","OrganizationForm","SystemForm","SystemTable","API_BASE_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","orgId","setOrgId","systems","setSystems","organizations","setOrganizations","selectedOrgName","setSelectedOrgName","fetchOrganizations","fetch","then","res","json","data","catch","err","console","error","fetchSystems","handleSelectOrganization","selectedOrgId","handleUpdateOrganization","updatedName","prompt","method","headers","body","JSON","stringify","name","handleDeleteOrganization","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","org","onClick","_id","onOrganizationCreated","onSystemAdded","length","onSystemUpdated","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport OrganizationForm from \"./components/OrganizationForm\";\nimport SystemForm from \"./components/SystemForm\";\nimport SystemTable from \"./components/SystemTable\"; // Import SystemTable component\nimport OrganizationList from \"./components/OrganizationList\"; // Import OrganizationList component\nimport API_BASE_URL from \"./config\";\n\nconst App = () => {\n  const [orgId, setOrgId] = useState<string | null>(null); // Track selected organization ID\n  const [systems, setSystems] = useState<any[]>([]); // List of systems for the selected organization\n  const [organizations, setOrganizations] = useState<any[]>([]); // List of organizations\n  const [selectedOrgName, setSelectedOrgName] = useState<string | null>(null); // Track the selected organization name\n\n  // Function to fetch organizations from the backend\n  const fetchOrganizations = () => {\n    fetch(`${API_BASE_URL}/api/organizations`)\n      .then((res) => res.json())\n      .then((data) => setOrganizations(data))\n      .catch((err) => console.error(\"Error fetching organizations:\", err));\n  };\n\n  // Fetch systems for a selected organization\n  const fetchSystems = (orgId: string) => {\n    fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`)\n      .then((res) => res.json())\n      .then((data) => setSystems(data))\n      .catch((err) => console.error(\"Error fetching systems:\", err));\n  };\n\n  // Fetch organizations on initial render\n  useEffect(() => {\n    fetchOrganizations();\n  }, []);\n\n  // Handle selecting an organization\n  const handleSelectOrganization = (\n    selectedOrgId: string,\n    selectedOrgName: string\n  ) => {\n    setOrgId(selectedOrgId);\n    setSelectedOrgName(selectedOrgName); // Set the selected organization's name\n    fetchSystems(selectedOrgId); // Fetch systems for the selected organization\n  };\n\n  // Handle updating an organization\n  const handleUpdateOrganization = async (orgId: string) => {\n    const updatedName = prompt(\"Enter new organization name:\");\n    if (updatedName) {\n      await fetch(`${API_BASE_URL}/api/organizations/${orgId}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name: updatedName }),\n      });\n      fetchOrganizations(); // Refresh the organization list after update\n    }\n  };\n\n  // Handle deleting an organization\n  const handleDeleteOrganization = async (orgId: string) => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete this organization? This will delete all associated systems as well.\"\n      )\n    ) {\n      await fetch(`${API_BASE_URL}/api/organizations/${orgId}`, {\n        method: \"DELETE\",\n      });\n      fetchOrganizations(); // Refresh the organization list after deletion\n      setOrgId(null); // Clear selected organization after deletion\n      setSelectedOrgName(null); // Clear selected organization name after deletion\n      setSystems([]); // Clear systems list after organization is deleted\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Application Header */}\n      <header className=\"bg-blue-600 text-white text-center py-6 shadow-lg\">\n        <h1 className=\"text-3xl font-bold\">Carbon Footprint Tracker</h1>\n      </header>\n\n      <div className=\"flex\">\n        {/* Sidebar for Organizations */}\n        <div className=\"w-72 bg-gray-800 text-white p-6 h-screen\">\n          <h2 className=\"text-xl font-semibold mb-6\">Your Organizations</h2>\n\n          {/* Pass handlers for selecting, updating, and deleting organizations */}\n          <ul>\n            {organizations.map((org) => (\n              <li\n                key={org._id}\n                onClick={() => handleSelectOrganization(org._id, org.name)}\n                className={`cursor-pointer py-2 px-4 bg-gray-700 rounded-lg mb-2 ${\n                  org._id === orgId\n                    ? \"bg-blue-500 text-white\"\n                    : \"bg-gray-700 text-gray-300\"\n                }`} // Highlight the selected organization\n              >\n                {org.name}\n              </li>\n            ))}\n          </ul>\n\n          {/* Form to add new organization */}\n          <div className=\"mt-8\">\n            <OrganizationForm onOrganizationCreated={fetchOrganizations} />\n          </div>\n        </div>\n\n        {/* Main Content for Systems */}\n        <div className=\"flex-grow p-10 bg-white shadow-lg\">\n          {selectedOrgName ? (\n            <>\n              <h2 className=\"text-2xl font-semibold text-gray-700 mb-4\">\n                Systems for {selectedOrgName}{\" \"}\n                {/* Display the selected organization's name */}\n              </h2>\n              <SystemForm\n                orgId={orgId!}\n                onSystemAdded={() => fetchSystems(orgId!)}\n              />\n\n              {/* Display systems in a table format */}\n              {systems.length > 0 ? (\n                <SystemTable\n                  systems={systems}\n                  onSystemUpdated={() => fetchSystems(orgId!)}\n                />\n              ) : (\n                <p className=\"text-gray-500 mt-4\">\n                  No systems available for this organization.\n                </p>\n              )}\n            </>\n          ) : (\n            <p className=\"text-gray-500\">\n              Please select an organization to view its systems.\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}