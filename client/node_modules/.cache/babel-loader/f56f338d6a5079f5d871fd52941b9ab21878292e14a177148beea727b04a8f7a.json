{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\components\\\\SystemForm.tsx\",\n  _s = $RefreshSig$();\n// client/src/components/SystemForm.tsx\n\nimport React, { useState } from \"react\";\nimport API_BASE_URL from \"../config\";\n\n// Define the props for the SystemForm component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SystemForm = ({\n  organizations,\n  onSystemAdded\n}) => {\n  _s();\n  const [selectedOrgId, setSelectedOrgId] = useState(null); // Track selected organization ID\n  const [type, setType] = useState(\"\"); // System type\n  const [details, setDetails] = useState(\"\"); // System details\n  const [error, setError] = useState(null); // Error state\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission\n    setError(null); // Clear previous errors\n\n    // Ensure an organization is selected\n    if (!selectedOrgId) {\n      setError(\"Please select an organization.\");\n      return;\n    }\n    try {\n      // Send POST request to add a system to the selected organization\n      const response = await fetch(`${API_BASE_URL}/api/organizations/${selectedOrgId}/systems`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          type,\n          details\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add system\");\n      }\n\n      // Clear form fields after successful submission\n      setType(\"\");\n      setDetails(\"\");\n      onSystemAdded(); // Notify parent component to refresh system list\n    } catch (err) {\n      setError(`Error adding system: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOrgId || \"\",\n      onChange: e => setSelectedOrgId(e.target.value),\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Organization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), organizations.map(org => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: org._id,\n        children: org.name\n      }, org._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: type,\n      onChange: e => setType(e.target.value),\n      placeholder: \"System Type (e.g., Supply Chain, Vehicles)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: details,\n      onChange: e => setDetails(e.target.value),\n      placeholder: \"System Details\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemForm, \"2990CDO2elF+gBUCmgzIfRlt/m8=\");\n_c = SystemForm;\nexport default SystemForm;\nvar _c;\n$RefreshReg$(_c, \"SystemForm\");","map":{"version":3,"names":["React","useState","API_BASE_URL","jsxDEV","_jsxDEV","SystemForm","organizations","onSystemAdded","_s","selectedOrgId","setSelectedOrgId","type","setType","details","setDetails","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","err","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","required","map","org","_id","name","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/components/SystemForm.tsx"],"sourcesContent":["// client/src/components/SystemForm.tsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport API_BASE_URL from \"../config\";\r\n\r\n// Define the props for the SystemForm component\r\ninterface SystemFormProps {\r\n  organizations: { _id: string; name: string }[]; // Array of organizations\r\n  onSystemAdded: () => void; // Callback for notifying the parent component\r\n}\r\n\r\nconst SystemForm: React.FC<SystemFormProps> = ({\r\n  organizations,\r\n  onSystemAdded,\r\n}) => {\r\n  const [selectedOrgId, setSelectedOrgId] = useState<string | null>(null); // Track selected organization ID\r\n  const [type, setType] = useState<string>(\"\"); // System type\r\n  const [details, setDetails] = useState<string>(\"\"); // System details\r\n  const [error, setError] = useState<string | null>(null); // Error state\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault(); // Prevent default form submission\r\n    setError(null); // Clear previous errors\r\n\r\n    // Ensure an organization is selected\r\n    if (!selectedOrgId) {\r\n      setError(\"Please select an organization.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Send POST request to add a system to the selected organization\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/organizations/${selectedOrgId}/systems`,\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ type, details }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to add system\");\r\n      }\r\n\r\n      // Clear form fields after successful submission\r\n      setType(\"\");\r\n      setDetails(\"\");\r\n\r\n      onSystemAdded(); // Notify parent component to refresh system list\r\n    } catch (err: unknown) {\r\n      setError(`Error adding system: ${(err as Error).message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add System</h2>\r\n\r\n      {/* Dropdown to select an organization */}\r\n      <select\r\n        value={selectedOrgId || \"\"}\r\n        onChange={(e) => setSelectedOrgId(e.target.value)}\r\n        required\r\n      >\r\n        <option value=\"\">Select Organization</option>\r\n        {organizations.map((org) => (\r\n          <option key={org._id} value={org._id}>\r\n            {org.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Input field for system type */}\r\n      <input\r\n        type=\"text\"\r\n        value={type}\r\n        onChange={(e) => setType(e.target.value)}\r\n        placeholder=\"System Type (e.g., Supply Chain, Vehicles)\"\r\n        required\r\n      />\r\n\r\n      {/* Textarea for system details */}\r\n      <textarea\r\n        value={details}\r\n        onChange={(e) => setDetails(e.target.value)}\r\n        placeholder=\"System Details\"\r\n        required\r\n      />\r\n\r\n      {/* Submit button */}\r\n      <button type=\"submit\">Add System</button>\r\n\r\n      {/* Display any error messages */}\r\n      {error && <p>{error}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SystemForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}