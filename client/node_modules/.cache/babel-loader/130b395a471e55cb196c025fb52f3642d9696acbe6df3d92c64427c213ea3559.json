{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\components\\\\SystemForm.tsx\",\n  _s = $RefreshSig$();\n// client/src/components/SystemForm.tsx\n\nimport React, { useState } from \"react\"; // Import React and the useState hook\nimport API_BASE_URL from \"../config\"; // Import base URL for API requests\n\n// Define the props interface for SystemForm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// SystemForm component - Handles adding new systems to an organization\nconst SystemForm = ({\n  orgId,\n  onSystemAdded\n}) => {\n  _s();\n  // State for system type, system details, and error messages\n  const [type, setType] = useState(\"\"); // Store the system type (e.g., \"Vehicles\", \"Supply Chain\")\n  const [details, setDetails] = useState(\"\"); // Store additional details about the system\n  const [error, setError] = useState(null); // Error state to handle any errors during submission\n\n  // Function to handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent default form submission behavior (page refresh)\n    setError(null); // Clear any previous error state before submitting\n\n    try {\n      // Send POST request to add a system to the organization\n      const response = await fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`, {\n        method: \"POST\",\n        // Define the method as POST to send data\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        // Specify JSON content\n        body: JSON.stringify({\n          type,\n          details\n        }) // Convert system type and details to JSON\n      });\n      if (!response.ok) {\n        // If the response status is not ok, throw an error\n        throw new Error(\"Failed to add system\");\n      }\n\n      // Clear the form inputs upon successful system addition\n      setType(\"\"); // Reset system type field\n      setDetails(\"\"); // Reset system details field\n      onSystemAdded(); // Call the callback function to update the parent component\n    } catch (err) {\n      // Set an error message in case the request fails\n      setError(`Error adding system: ${err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"mt-4 p-4 bg-gray-50 rounded-lg shadow-lg\" // Styling for the form container\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold text-gray-800 mb-4\",\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 mb-2\",\n        htmlFor: \"systemType\",\n        children: \"System Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"systemType\",\n        value: type // Bind input value to type state\n        ,\n        onChange: e => setType(e.target.value) // Update state on change\n        ,\n        className: \"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500\",\n        placeholder: \"Enter system type (e.g., Vehicles, Supply Chain)\" // Input placeholder\n        ,\n        required: true // Mark the input as required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 mb-2\",\n        htmlFor: \"systemDetails\",\n        children: \"System Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"systemDetails\",\n        value: details // Bind textarea value to details state\n        ,\n        onChange: e => setDetails(e.target.value) // Update state on change\n        ,\n        className: \"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500\",\n        placeholder: \"Enter details for the system\" // Textarea placeholder\n        ,\n        required: true // Mark the textarea as required\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\",\n      children: \"Add System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemForm, \"uu7U8yV1wJP72Qz4dGVF3DW2klc=\");\n_c = SystemForm;\nexport default SystemForm;\nvar _c;\n$RefreshReg$(_c, \"SystemForm\");","map":{"version":3,"names":["React","useState","API_BASE_URL","jsxDEV","_jsxDEV","SystemForm","orgId","onSystemAdded","_s","type","setType","details","setDetails","error","setError","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","Error","err","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/components/SystemForm.tsx"],"sourcesContent":["// client/src/components/SystemForm.tsx\r\n\r\nimport React, { useState } from \"react\"; // Import React and the useState hook\r\nimport API_BASE_URL from \"../config\"; // Import base URL for API requests\r\n\r\n// Define the props interface for SystemForm\r\ninterface SystemFormProps {\r\n  orgId: string; // The organization ID to which the system belongs\r\n  onSystemAdded: () => void; // Callback function when a system is successfully added\r\n}\r\n\r\n// SystemForm component - Handles adding new systems to an organization\r\nconst SystemForm: React.FC<SystemFormProps> = ({ orgId, onSystemAdded }) => {\r\n  // State for system type, system details, and error messages\r\n  const [type, setType] = useState(\"\"); // Store the system type (e.g., \"Vehicles\", \"Supply Chain\")\r\n  const [details, setDetails] = useState(\"\"); // Store additional details about the system\r\n  const [error, setError] = useState<string | null>(null); // Error state to handle any errors during submission\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault(); // Prevent default form submission behavior (page refresh)\r\n    setError(null); // Clear any previous error state before submitting\r\n\r\n    try {\r\n      // Send POST request to add a system to the organization\r\n      const response = await fetch(\r\n        `${API_BASE_URL}/api/organizations/${orgId}/systems`,\r\n        {\r\n          method: \"POST\", // Define the method as POST to send data\r\n          headers: { \"Content-Type\": \"application/json\" }, // Specify JSON content\r\n          body: JSON.stringify({ type, details }), // Convert system type and details to JSON\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        // If the response status is not ok, throw an error\r\n        throw new Error(\"Failed to add system\");\r\n      }\r\n\r\n      // Clear the form inputs upon successful system addition\r\n      setType(\"\"); // Reset system type field\r\n      setDetails(\"\"); // Reset system details field\r\n      onSystemAdded(); // Call the callback function to update the parent component\r\n    } catch (err: unknown) {\r\n      // Set an error message in case the request fails\r\n      setError(`Error adding system: ${(err as Error).message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"mt-4 p-4 bg-gray-50 rounded-lg shadow-lg\" // Styling for the form container\r\n    >\r\n      <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Add System</h2>{\" \"}\r\n      {/* Form heading */}\r\n      {/* Input field for system type */}\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 mb-2\" htmlFor=\"systemType\">\r\n          System Type\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"systemType\"\r\n          value={type} // Bind input value to type state\r\n          onChange={(e) => setType(e.target.value)} // Update state on change\r\n          className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500\"\r\n          placeholder=\"Enter system type (e.g., Vehicles, Supply Chain)\" // Input placeholder\r\n          required // Mark the input as required\r\n        />\r\n      </div>\r\n      {/* Textarea for system details */}\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-gray-700 mb-2\" htmlFor=\"systemDetails\">\r\n          System Details\r\n        </label>\r\n        <textarea\r\n          id=\"systemDetails\"\r\n          value={details} // Bind textarea value to details state\r\n          onChange={(e) => setDetails(e.target.value)} // Update state on change\r\n          className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500\"\r\n          placeholder=\"Enter details for the system\" // Textarea placeholder\r\n          required // Mark the textarea as required\r\n        />\r\n      </div>\r\n      {/* Display an error message if any */}\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n      {/* Submit button for adding the system */}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50\"\r\n      >\r\n        Add System\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SystemForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}