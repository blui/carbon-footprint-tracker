{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brian\\\\Downloads\\\\Repository\\\\carbon-footprint-tracker\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n// client/src/App.tsx\n\nimport React, { useState, useEffect } from \"react\";\nimport OrganizationForm from \"./components/OrganizationForm\";\nimport SystemForm from \"./components/SystemForm\";\nimport OrganizationList from \"./components/OrganizationList\";\nimport API_BASE_URL from \"./config\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [orgId, setOrgId] = useState(null); // Track selected organization ID\n  const [organizations, setOrganizations] = useState([]); // List of organizations\n  const [systems, setSystems] = useState([]); // List of systems for the selected organization\n  const [selectedOrg, setSelectedOrg] = useState(null); // Track selected organization name\n\n  // Fetch all organizations from the backend\n  const fetchOrganizations = () => {\n    fetch(`${API_BASE_URL}/api/organizations`).then(res => res.json()).then(data => setOrganizations(data)).catch(err => console.error(\"Error fetching organizations:\", err));\n  };\n\n  // Fetch systems for a specific organization\n  const fetchSystems = orgId => {\n    fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`).then(res => res.json()).then(data => setSystems(data)).catch(err => console.error(\"Error fetching systems:\", err));\n  };\n\n  // Fetch organizations on mount\n  useEffect(() => {\n    fetchOrganizations();\n  }, []);\n\n  // Fetch systems when an organization is selected\n  useEffect(() => {\n    if (orgId) {\n      fetchSystems(orgId);\n    }\n  }, [orgId]);\n\n  // Handle organization creation\n  const handleOrganizationCreated = (createdOrgId, createdOrgName) => {\n    setOrgId(createdOrgId);\n    setSelectedOrg(createdOrgName);\n    setSystems([]);\n    fetchOrganizations();\n  };\n\n  // Handle system addition\n  const handleSystemAdded = () => {\n    fetchOrganizations();\n    if (orgId) {\n      fetchSystems(orgId);\n    }\n  };\n\n  // Handle selecting an organization from the sidebar\n  const handleSelectOrganization = (selectedOrgId, selectedOrgName) => {\n    setOrgId(selectedOrgId);\n    setSelectedOrg(selectedOrgName);\n    fetchSystems(selectedOrgId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-blue-600 text-white text-center py-6 shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold\",\n        children: \"DataBridge Log Analyzer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-72 bg-gray-800 text-white p-6 h-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4 text-center\",\n          children: \"Organizations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OrganizationList, {\n          organizations: organizations,\n          onSelect: handleSelectOrganization\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-8\",\n          children: /*#__PURE__*/_jsxDEV(OrganizationForm, {\n            onOrganizationCreated: handleOrganizationCreated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow p-10 bg-white shadow-lg\",\n        children: selectedOrg ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold text-gray-700 border-b-2 border-blue-600 pb-2\",\n            children: selectedOrg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SystemForm, {\n            organizations: organizations,\n            onSystemAdded: handleSystemAdded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), systems.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mt-6\",\n            children: systems.map(system => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"py-4 border-b border-gray-300\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"font-semibold\",\n                children: system.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 23\n              }, this), \":\", \" \", system.details]\n            }, system._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-500 mt-4\",\n            children: \"No systems available for this organization.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Please select an organization from the sidebar.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"KGvnacJ+u6r+378BP03bglN5nZs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","OrganizationForm","SystemForm","OrganizationList","API_BASE_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","orgId","setOrgId","organizations","setOrganizations","systems","setSystems","selectedOrg","setSelectedOrg","fetchOrganizations","fetch","then","res","json","data","catch","err","console","error","fetchSystems","handleOrganizationCreated","createdOrgId","createdOrgName","handleSystemAdded","handleSelectOrganization","selectedOrgId","selectedOrgName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","onOrganizationCreated","onSystemAdded","length","map","system","type","details","_id","_c","$RefreshReg$"],"sources":["C:/Users/brian/Downloads/Repository/carbon-footprint-tracker/client/src/App.tsx"],"sourcesContent":["// client/src/App.tsx\n\nimport React, { useState, useEffect } from \"react\";\nimport OrganizationForm from \"./components/OrganizationForm\";\nimport SystemForm from \"./components/SystemForm\";\nimport OrganizationList from \"./components/OrganizationList\";\nimport API_BASE_URL from \"./config\";\n\nconst App: React.FC = () => {\n  const [orgId, setOrgId] = useState<string | null>(null); // Track selected organization ID\n  const [organizations, setOrganizations] = useState<any[]>([]); // List of organizations\n  const [systems, setSystems] = useState<any[]>([]); // List of systems for the selected organization\n  const [selectedOrg, setSelectedOrg] = useState<string | null>(null); // Track selected organization name\n\n  // Fetch all organizations from the backend\n  const fetchOrganizations = () => {\n    fetch(`${API_BASE_URL}/api/organizations`)\n      .then((res) => res.json())\n      .then((data) => setOrganizations(data))\n      .catch((err) => console.error(\"Error fetching organizations:\", err));\n  };\n\n  // Fetch systems for a specific organization\n  const fetchSystems = (orgId: string) => {\n    fetch(`${API_BASE_URL}/api/organizations/${orgId}/systems`)\n      .then((res) => res.json())\n      .then((data) => setSystems(data))\n      .catch((err) => console.error(\"Error fetching systems:\", err));\n  };\n\n  // Fetch organizations on mount\n  useEffect(() => {\n    fetchOrganizations();\n  }, []);\n\n  // Fetch systems when an organization is selected\n  useEffect(() => {\n    if (orgId) {\n      fetchSystems(orgId);\n    }\n  }, [orgId]);\n\n  // Handle organization creation\n  const handleOrganizationCreated = (\n    createdOrgId: string,\n    createdOrgName: string\n  ) => {\n    setOrgId(createdOrgId);\n    setSelectedOrg(createdOrgName);\n    setSystems([]);\n    fetchOrganizations();\n  };\n\n  // Handle system addition\n  const handleSystemAdded = () => {\n    fetchOrganizations();\n    if (orgId) {\n      fetchSystems(orgId);\n    }\n  };\n\n  // Handle selecting an organization from the sidebar\n  const handleSelectOrganization = (\n    selectedOrgId: string,\n    selectedOrgName: string\n  ) => {\n    setOrgId(selectedOrgId);\n    setSelectedOrg(selectedOrgName);\n    fetchSystems(selectedOrgId);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      {/* Application Header */}\n      <header className=\"bg-blue-600 text-white text-center py-6 shadow-lg\">\n        <h1 className=\"text-3xl font-bold\">DataBridge Log Analyzer</h1>\n      </header>\n\n      <div className=\"flex\">\n        {/* Sidebar */}\n        <div className=\"w-72 bg-gray-800 text-white p-6 h-screen\">\n          <h2 className=\"text-xl font-semibold mb-4 text-center\">\n            Organizations\n          </h2>\n          <OrganizationList\n            organizations={organizations}\n            onSelect={handleSelectOrganization}\n          />\n          <div className=\"mt-8\">\n            <OrganizationForm\n              onOrganizationCreated={handleOrganizationCreated}\n            />\n          </div>\n        </div>\n\n        {/* Main Content Area */}\n        <div className=\"flex-grow p-10 bg-white shadow-lg\">\n          {selectedOrg ? (\n            <>\n              <h2 className=\"text-2xl font-semibold text-gray-700 border-b-2 border-blue-600 pb-2\">\n                {selectedOrg}\n              </h2>\n              <SystemForm\n                organizations={organizations}\n                onSystemAdded={handleSystemAdded}\n              />\n              {systems.length > 0 ? (\n                <ul className=\"mt-6\">\n                  {systems.map((system) => (\n                    <li\n                      key={system._id}\n                      className=\"py-4 border-b border-gray-300\"\n                    >\n                      <strong className=\"font-semibold\">{system.type}</strong>:{\" \"}\n                      {system.details}\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <p className=\"text-gray-500 mt-4\">\n                  No systems available for this organization.\n                </p>\n              )}\n            </>\n          ) : (\n            <p className=\"text-gray-500\">\n              Please select an organization from the sidebar.\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,YAAY,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;EACzD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAQ,EAAE,CAAC,CAAC,CAAC;EACnD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAgB,IAAI,CAAC,CAAC,CAAC;;EAErE;EACA,MAAMoB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BC,KAAK,CAAC,GAAGhB,YAAY,oBAAoB,CAAC,CACvCiB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKV,gBAAgB,CAACU,IAAI,CAAC,CAAC,CACtCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC;;EAED;EACA,MAAMG,YAAY,GAAIlB,KAAa,IAAK;IACtCS,KAAK,CAAC,GAAGhB,YAAY,sBAAsBO,KAAK,UAAU,CAAC,CACxDU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKR,UAAU,CAACQ,IAAI,CAAC,CAAC,CAChCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEF,GAAG,CAAC,CAAC;EAClE,CAAC;;EAED;EACA1B,SAAS,CAAC,MAAM;IACdmB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnB,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK,EAAE;MACTkB,YAAY,CAAClB,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMmB,yBAAyB,GAAGA,CAChCC,YAAoB,EACpBC,cAAsB,KACnB;IACHpB,QAAQ,CAACmB,YAAY,CAAC;IACtBb,cAAc,CAACc,cAAc,CAAC;IAC9BhB,UAAU,CAAC,EAAE,CAAC;IACdG,kBAAkB,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMc,iBAAiB,GAAGA,CAAA,KAAM;IAC9Bd,kBAAkB,CAAC,CAAC;IACpB,IAAIR,KAAK,EAAE;MACTkB,YAAY,CAAClB,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMuB,wBAAwB,GAAGA,CAC/BC,aAAqB,EACrBC,eAAuB,KACpB;IACHxB,QAAQ,CAACuB,aAAa,CAAC;IACvBjB,cAAc,CAACkB,eAAe,CAAC;IAC/BP,YAAY,CAACM,aAAa,CAAC;EAC7B,CAAC;EAED,oBACE7B,OAAA;IAAK+B,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBAEvChC,OAAA;MAAQ+B,SAAS,EAAC,mDAAmD;MAAAC,QAAA,eACnEhC,OAAA;QAAI+B,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eAETpC,OAAA;MAAK+B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBAEnBhC,OAAA;QAAK+B,SAAS,EAAC,0CAA0C;QAAAC,QAAA,gBACvDhC,OAAA;UAAI+B,SAAS,EAAC,wCAAwC;UAAAC,QAAA,EAAC;QAEvD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACLpC,OAAA,CAACH,gBAAgB;UACfU,aAAa,EAAEA,aAAc;UAC7B8B,QAAQ,EAAET;QAAyB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,eACFpC,OAAA;UAAK+B,SAAS,EAAC,MAAM;UAAAC,QAAA,eACnBhC,OAAA,CAACL,gBAAgB;YACf2C,qBAAqB,EAAEd;UAA0B;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNpC,OAAA;QAAK+B,SAAS,EAAC,mCAAmC;QAAAC,QAAA,EAC/CrB,WAAW,gBACVX,OAAA,CAAAE,SAAA;UAAA8B,QAAA,gBACEhC,OAAA;YAAI+B,SAAS,EAAC,sEAAsE;YAAAC,QAAA,EACjFrB;UAAW;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACLpC,OAAA,CAACJ,UAAU;YACTW,aAAa,EAAEA,aAAc;YAC7BgC,aAAa,EAAEZ;UAAkB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,EACD3B,OAAO,CAAC+B,MAAM,GAAG,CAAC,gBACjBxC,OAAA;YAAI+B,SAAS,EAAC,MAAM;YAAAC,QAAA,EACjBvB,OAAO,CAACgC,GAAG,CAAEC,MAAM,iBAClB1C,OAAA;cAEE+B,SAAS,EAAC,+BAA+B;cAAAC,QAAA,gBAEzChC,OAAA;gBAAQ+B,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAEU,MAAM,CAACC;cAAI;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,KAAC,EAAC,GAAG,EAC5DM,MAAM,CAACE,OAAO;YAAA,GAJVF,MAAM,CAACG,GAAG;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKb,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,gBAELpC,OAAA;YAAG+B,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAAC;UAElC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACJ;QAAA,eACD,CAAC,gBAEHpC,OAAA;UAAG+B,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAE7B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CA7HID,GAAa;AAAA2C,EAAA,GAAb3C,GAAa;AA+HnB,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}